version: '3.8'

services:
  db:
    image: postgres:13-alpine
    container_name: umbra_postgres_db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build: .
    container_name: umbra_fastapi_app
    command: uvicorn src.api.v1.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      # DB_HOST: db # REMOVE THIS LINE
      # DB_PORT: 5432 # REMOVE THIS LINE
      # DB_NAME: ${DB_NAME} # REMOVE THIS LINE
      # DB_USER: ${DB_USER} # REMOVE THIS LINE
      # DB_PASSWORD: ${DB_PASSWORD} # REMOVE THIS LINE
      # DATABASE_URL for the app running inside Docker: points to the 'db' service
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@db:${DB_PORT}/${DB_NAME}
      # MLFLOW_TRACKING_URI: http://mlflow:5000 # Uncomment if MLflow server is added
    depends_on:
      db:
        condition: service_healthy
    # Uncomment and configure if you plan to use an MLflow tracking server within Docker
    # mlflow:
    #   image: ghcr.io/mlflow/mlflow:latest
    #   container_name: umbra_mlflow_server
    #   ports:
    #     - "5000:5000"
    #   environment:
    #     MLFLOW_TRACKING_URI: "http://0.0.0.0:5000"
    #     AWS_ACCESS_KEY_ID: your_access_key # Replace with your actual AWS credentials or remove if not using S3 backend
    #     AWS_SECRET_ACCESS_KEY: your_secret_key
    #   volumes:
    #     - ./mlruns:/mlruns

volumes:
  postgres_data: 